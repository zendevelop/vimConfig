set nocompatible
source $VIMRUNTIME/vimrc_example.vim
source $VIMRUNTIME/mswin.vim
behave mswin

set diffexpr=MyDiff()
function MyDiff()
  let opt = '-a --binary '
  if &diffopt =~ 'icase' | let opt = opt . '-i ' | endif
  if &diffopt =~ 'iwhite' | let opt = opt . '-b ' | endif
  let arg1 = v:fname_in
  if arg1 =~ ' ' | let arg1 = '"' . arg1 . '"' | endif
  let arg2 = v:fname_new
  if arg2 =~ ' ' | let arg2 = '"' . arg2 . '"' | endif
  let arg3 = v:fname_out
  if arg3 =~ ' ' | let arg3 = '"' . arg3 . '"' | endif
  let eq = ''
  if $VIMRUNTIME =~ ' '
    if &sh =~ '\<cmd'
      let cmd = '""' . $VIMRUNTIME . '\diff"'
      let eq = '"'
    else
      let cmd = substitute($VIMRUNTIME, ' ', '" ', '') . '\diff"'
    endif
  else
    let cmd = $VIMRUNTIME . '\diff'
  endif
  silent execute '!' . cmd . ' ' . opt . arg1 . ' ' . arg2 . ' > ' . arg3 . eq
endfunction

"Peter's config
set nocompatible
set number
set tabstop=4
set shiftwidth=4
set softtabstop=4
set autoindent
set smartindent
set cindent
set showmatch
set incsearch
set clipboard+=unnamed
set nu
set nobackup
set hlsearch
set guioptions-=T
set guioptions-=m
set ruler
set hidden		"in order to switch between buffers with unsaved change
set cursorline
set noswapfile

filetype off    "vundle required!
set rtp+=$VIM/.vim/bundle/vundle
call vundle#rc()

filetype plugin on
filetype indent on
set autoread
syntax enable
colorscheme  evening

set guifont=Consolas:h14

if has("win32")
  au GUIEnter * simalt ~x
endif

" With a map leader it's possible  to do extra key combinations
" like <leader.w saves the current file
let mapleader = ","
let g:mapleader = ","

"Fast saving
nmap <leader>w :w!<cr>

"netrw config
let g:netrw_winsize = 30
nmap <silent> <leader>fe :Sexplore!<cr>

"Indent Guides config
let g:indent_guides_guide_size=1

"cscope config
cs a cscope.out
set cst
nmap <C-_>s :cs find s <C-R>=expand("<cword>")<CR><CR>
nmap <C-_>g :cs find g <C-R>=expand("<cword>")<CR><CR>
nmap <C-_>c :cs find c <C-R>=expand("<cword>")<CR><CR>
nmap <C-_>t :cs find t <C-R>=expand("<cword>")<CR><CR>
nmap <C-_>e :cs find e <C-R>=expand("<cword>")<CR><CR>
nmap <C-_>f :cs find f <C-R>=expand("<cfile>")<CR><CR>
nmap <C-_>i :cs find i ^<C-R>=expand("<cfile>")<CR>$<CR>
nmap <C-_>d :cs find d <C-R>=expand("<cword>")<CR><CR>

"taglist config
let Tlist_Show_One_File=1
let Tlist_Exit_OnlyWindow=1
let Tlist_Use_Right_Window=1
let Tlist_Use_SingleClick=1
let Tlist_Auto_Open=1
let Tlist_Process_File_Always=1
let Tlist_Sort_Type="name"

"BufExplorer config
let g:bufExplorerDefaulthelp = 0		"Do not show default help
let g:bufExplorerShowRelativePath = 1		"Show relative paths

"winmanager config
let g:AutoOpenWinManager=1
let g:winManagerWindowLayout="BufExplorer,FileExplorer|TagList"
let g:winManagerWidth=30
let g:defaultExplorer=0
nmap <C-W><C-F> :FirstExplorerWindow<cr>
nmap <C-W><C-B> :BottomExplorerWindow<cr>
nmap <silent> <leader>wm :WMToggle<cr>

"fuzzyfinder config
map ,, :FufCoverageFile!<cr>
let g:fuf_enumeratingLimit = 5000
let g:fuf_coveragefile_exclude = '\v\~$|\.(o|a|d|tag|exe|dll|bak|orig|swp)$|(^|[/\\])\.(hg|git|bzr)($|[/\\])'
let g:fuf_coveragefile_prompt = '=>'

filetype plugin indent on    "required!
"put this load config at end of rc file
"now have some error, need fix it
"source v33.vim
"rviminfo v33.viminfo

